
local function create_textinput1(self)
	local id = textinput.create(true, function(_, ev, data)
		if ev == textinput.EVENT_ON_TEXT_CHANGED then
			gui.set_text(gui.get_node("text1"), data)
		end
	end)
	textinput.set_auto_capitalize(id, textinput.CAPITALIZE_WORDS)
	return id
end

local function create_textinput2(self)
	local id = textinput.create(true, function(_, ev, data)
		if ev == textinput.EVENT_ON_TEXT_CHANGED then
			gui.set_text(gui.get_node("text2"), data)
		end
	end)
	textinput.set_auto_capitalize(id, textinput.CAPITALIZE_CHARACTERS)
	return id
end

local function create_textinput3(self)
	local id = textinput.create(false, function(_, ev, data)
	end)
	textinput.set_hint(id, "Enter here...")
	textinput.set_hint_text_color(id, "#ff0000")
	textinput.set_text_color(id, "#ffff00")
	textinput.set_position(id, 300, 400)
	textinput.set_size(id, 500, 150)
	textinput.set_auto_capitalize(id, textinput.CAPITALIZE_SENTENCES)
	textinput.set_visible(id, true)
	return id
end

local function focus(id)
	if textinput then
		textinput.focus(id)
	end
end

function init(self)
	if textinput then
		self.id1 = create_textinput1(self)
		self.id2 = create_textinput2(self)
		-- self.id3 = create_textinput3(self)
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed then
		if gui.pick_node(gui.get_node("box1"), action.x, action.y) then
			gui.set_scale(gui.get_node("box1"), vmath.vector3(0.95))
			gui.animate(gui.get_node("box1"), "scale", 1, gui.EASING_LINEAR, 0.2, 0, function()
				focus(self.id1)
			end)
			return true
		end
		if gui.pick_node(gui.get_node("box2"), action.x, action.y) then
			gui.set_scale(gui.get_node("box2"), vmath.vector3(0.95))
			gui.animate(gui.get_node("box2"), "scale", 1, gui.EASING_LINEAR, 0.2, 0, function()
				focus(self.id2)
			end)
			return true
		end
	end
end